/**
 */
package SoccerStrategy.Rules.util;

import SoccerStrategy.Rules.*;

import TGGRuntime.AbstractRule;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see SoccerStrategy.Rules.RulesPackage
 * @generated
 */
public class RulesSwitch<T> extends Switch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static RulesPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RulesSwitch() {
		if (modelPackage == null) {
			modelPackage = RulesPackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @parameter ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage) {
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
	@Override
	protected T doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
		case RulesPackage.CREATE_UPDATE_RULE: {
			CreateUpdateRule createUpdateRule = (CreateUpdateRule) theEObject;
			T result = caseCreateUpdateRule(createUpdateRule);
			if (result == null)
				result = caseAbstractRule(createUpdateRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.MOVE_FORWARD_RULE: {
			MoveForwardRule moveForwardRule = (MoveForwardRule) theEObject;
			T result = caseMoveForwardRule(moveForwardRule);
			if (result == null)
				result = caseAbstractRule(moveForwardRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.CREATE_EAST_WEST_LINKS_RULE: {
			CreateEastWestLinksRule createEastWestLinksRule = (CreateEastWestLinksRule) theEObject;
			T result = caseCreateEastWestLinksRule(createEastWestLinksRule);
			if (result == null)
				result = caseAbstractRule(createEastWestLinksRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.CREATE_NORTH_SOUTH_LINKS_RULE: {
			CreateNorthSouthLinksRule createNorthSouthLinksRule = (CreateNorthSouthLinksRule) theEObject;
			T result = caseCreateNorthSouthLinksRule(createNorthSouthLinksRule);
			if (result == null)
				result = caseAbstractRule(createNorthSouthLinksRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.REGULAR_FIELDS: {
			RegularFields regularFields = (RegularFields) theEObject;
			T result = caseRegularFields(regularFields);
			if (result == null)
				result = caseAbstractRule(regularFields);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.DO_NOT_MOVE_GOAL_KEEPER: {
			DoNotMoveGoalKeeper doNotMoveGoalKeeper = (DoNotMoveGoalKeeper) theEObject;
			T result = caseDoNotMoveGoalKeeper(doNotMoveGoalKeeper);
			if (result == null)
				result = caseAbstractRule(doNotMoveGoalKeeper);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.CREATE_BALL_RULE: {
			CreateBallRule createBallRule = (CreateBallRule) theEObject;
			T result = caseCreateBallRule(createBallRule);
			if (result == null)
				result = caseAbstractRule(createBallRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.LINK_BALL_TO_PLAYER_RULE: {
			LinkBallToPlayerRule linkBallToPlayerRule = (LinkBallToPlayerRule) theEObject;
			T result = caseLinkBallToPlayerRule(linkBallToPlayerRule);
			if (result == null)
				result = caseAbstractRule(linkBallToPlayerRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.GOAL_FIELDS: {
			GoalFields goalFields = (GoalFields) theEObject;
			T result = caseGoalFields(goalFields);
			if (result == null)
				result = caseAbstractRule(goalFields);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.IGNORE_OPPONENT_PLAYERS_RULE: {
			IgnoreOpponentPlayersRule ignoreOpponentPlayersRule = (IgnoreOpponentPlayersRule) theEObject;
			T result = caseIgnoreOpponentPlayersRule(ignoreOpponentPlayersRule);
			if (result == null)
				result = caseAbstractRule(ignoreOpponentPlayersRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.MOVE_GOAL_KEEPER_NORTH: {
			MoveGoalKeeperNorth moveGoalKeeperNorth = (MoveGoalKeeperNorth) theEObject;
			T result = caseMoveGoalKeeperNorth(moveGoalKeeperNorth);
			if (result == null)
				result = caseAbstractRule(moveGoalKeeperNorth);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.IGNORE_OPPONENT_GOAL_KEEPER_RULE: {
			IgnoreOpponentGoalKeeperRule ignoreOpponentGoalKeeperRule = (IgnoreOpponentGoalKeeperRule) theEObject;
			T result = caseIgnoreOpponentGoalKeeperRule(ignoreOpponentGoalKeeperRule);
			if (result == null)
				result = caseAbstractRule(ignoreOpponentGoalKeeperRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.GOAL_KEEPER_KICK_OFF_BALL: {
			GoalKeeper_KickOffBall goalKeeper_KickOffBall = (GoalKeeper_KickOffBall) theEObject;
			T result = caseGoalKeeper_KickOffBall(goalKeeper_KickOffBall);
			if (result == null)
				result = caseAbstractRule(goalKeeper_KickOffBall);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.MOVE_GOAL_KEEPER_SOUTH: {
			MoveGoalKeeperSouth moveGoalKeeperSouth = (MoveGoalKeeperSouth) theEObject;
			T result = caseMoveGoalKeeperSouth(moveGoalKeeperSouth);
			if (result == null)
				result = caseAbstractRule(moveGoalKeeperSouth);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.IGNORE_OPPONENT_GOAL_KEEPER_WITH_BALL_RULE: {
			IgnoreOpponentGoalKeeperWithBallRule ignoreOpponentGoalKeeperWithBallRule = (IgnoreOpponentGoalKeeperWithBallRule) theEObject;
			T result = caseIgnoreOpponentGoalKeeperWithBallRule(ignoreOpponentGoalKeeperWithBallRule);
			if (result == null)
				result = caseAbstractRule(ignoreOpponentGoalKeeperWithBallRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.GOAL_KEEPER_PASSES_TO_PLAYER_RULE: {
			GoalKeeperPassesToPlayerRule goalKeeperPassesToPlayerRule = (GoalKeeperPassesToPlayerRule) theEObject;
			T result = caseGoalKeeperPassesToPlayerRule(goalKeeperPassesToPlayerRule);
			if (result == null)
				result = caseAbstractRule(goalKeeperPassesToPlayerRule);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.GOAL_KEEPER_PASSES_TO_PLAYER_RED: {
			GoalKeeperPassesToPlayer_Red goalKeeperPassesToPlayer_Red = (GoalKeeperPassesToPlayer_Red) theEObject;
			T result = caseGoalKeeperPassesToPlayer_Red(goalKeeperPassesToPlayer_Red);
			if (result == null)
				result = caseGoalKeeperPassesToPlayerRule(goalKeeperPassesToPlayer_Red);
			if (result == null)
				result = caseAbstractRule(goalKeeperPassesToPlayer_Red);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.PLAYER_TO_PLAYER_SHOT: {
			PlayerToPlayerShot playerToPlayerShot = (PlayerToPlayerShot) theEObject;
			T result = casePlayerToPlayerShot(playerToPlayerShot);
			if (result == null)
				result = caseGoalKeeperPassesToPlayer_Red(playerToPlayerShot);
			if (result == null)
				result = caseGoalKeeperPassesToPlayerRule(playerToPlayerShot);
			if (result == null)
				result = caseAbstractRule(playerToPlayerShot);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case RulesPackage.GOAL_KEEPER_PASSES_TO_PLAYER2_BLUE: {
			GoalKeeperPassesToPlayer2_Blue goalKeeperPassesToPlayer2_Blue = (GoalKeeperPassesToPlayer2_Blue) theEObject;
			T result = caseGoalKeeperPassesToPlayer2_Blue(goalKeeperPassesToPlayer2_Blue);
			if (result == null)
				result = caseAbstractRule(goalKeeperPassesToPlayer2_Blue);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		default:
			return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Create Update Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Create Update Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCreateUpdateRule(CreateUpdateRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Move Forward Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Move Forward Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMoveForwardRule(MoveForwardRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Create East West Links Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Create East West Links Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCreateEastWestLinksRule(CreateEastWestLinksRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Create North South Links Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Create North South Links Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCreateNorthSouthLinksRule(CreateNorthSouthLinksRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Regular Fields</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Regular Fields</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseRegularFields(RegularFields object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Do Not Move Goal Keeper</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Do Not Move Goal Keeper</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseDoNotMoveGoalKeeper(DoNotMoveGoalKeeper object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Create Ball Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Create Ball Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCreateBallRule(CreateBallRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Link Ball To Player Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Link Ball To Player Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseLinkBallToPlayerRule(LinkBallToPlayerRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal Fields</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal Fields</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoalFields(GoalFields object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ignore Opponent Players Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ignore Opponent Players Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIgnoreOpponentPlayersRule(IgnoreOpponentPlayersRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Move Goal Keeper North</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Move Goal Keeper North</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMoveGoalKeeperNorth(MoveGoalKeeperNorth object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ignore Opponent Goal Keeper Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ignore Opponent Goal Keeper Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIgnoreOpponentGoalKeeperRule(
			IgnoreOpponentGoalKeeperRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal Keeper Kick Off Ball</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal Keeper Kick Off Ball</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoalKeeper_KickOffBall(GoalKeeper_KickOffBall object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Move Goal Keeper South</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Move Goal Keeper South</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseMoveGoalKeeperSouth(MoveGoalKeeperSouth object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ignore Opponent Goal Keeper With Ball Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ignore Opponent Goal Keeper With Ball Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseIgnoreOpponentGoalKeeperWithBallRule(
			IgnoreOpponentGoalKeeperWithBallRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal Keeper Passes To Player Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal Keeper Passes To Player Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoalKeeperPassesToPlayerRule(
			GoalKeeperPassesToPlayerRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal Keeper Passes To Player Red</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal Keeper Passes To Player Red</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoalKeeperPassesToPlayer_Red(
			GoalKeeperPassesToPlayer_Red object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Player To Player Shot</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Player To Player Shot</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePlayerToPlayerShot(PlayerToPlayerShot object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Goal Keeper Passes To Player2 Blue</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Goal Keeper Passes To Player2 Blue</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseGoalKeeperPassesToPlayer2_Blue(
			GoalKeeperPassesToPlayer2_Blue object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Abstract Rule</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Abstract Rule</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseAbstractRule(AbstractRule object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object) {
		return null;
	}

} //RulesSwitch
