/**
 */
package SoccerStrategy.Rules.impl;

import SoccerStrategy.Rules.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RulesFactoryImpl extends EFactoryImpl implements RulesFactory {
	/**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static RulesFactory init() {
		try {
			RulesFactory theRulesFactory = (RulesFactory) EPackage.Registry.INSTANCE
					.getEFactory(RulesPackage.eNS_URI);
			if (theRulesFactory != null) {
				return theRulesFactory;
			}
		} catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new RulesFactoryImpl();
	}

	/**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RulesFactoryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EObject create(EClass eClass) {
		switch (eClass.getClassifierID()) {
		case RulesPackage.CREATE_UPDATE_RULE:
			return createCreateUpdateRule();
		case RulesPackage.MOVE_FORWARD_RULE:
			return createMoveForwardRule();
		case RulesPackage.CREATE_EAST_WEST_LINKS_RULE:
			return createCreateEastWestLinksRule();
		case RulesPackage.CREATE_NORTH_SOUTH_LINKS_RULE:
			return createCreateNorthSouthLinksRule();
		case RulesPackage.REGULAR_FIELDS:
			return createRegularFields();
		case RulesPackage.DO_NOT_MOVE_GOAL_KEEPER:
			return createDoNotMoveGoalKeeper();
		case RulesPackage.CREATE_BALL_RULE:
			return createCreateBallRule();
		case RulesPackage.LINK_BALL_TO_PLAYER_RULE:
			return createLinkBallToPlayerRule();
		case RulesPackage.GOAL_FIELDS:
			return createGoalFields();
		case RulesPackage.IGNORE_OPPONENT_PLAYERS_RULE:
			return createIgnoreOpponentPlayersRule();
		case RulesPackage.MOVE_GOAL_KEEPER_NORTH:
			return createMoveGoalKeeperNorth();
		case RulesPackage.IGNORE_OPPONENT_GOAL_KEEPER_RULE:
			return createIgnoreOpponentGoalKeeperRule();
		case RulesPackage.GOAL_KEEPER_KICK_OFF_BALL:
			return createGoalKeeper_KickOffBall();
		case RulesPackage.MOVE_GOAL_KEEPER_SOUTH:
			return createMoveGoalKeeperSouth();
		case RulesPackage.IGNORE_OPPONENT_GOAL_KEEPER_WITH_BALL_RULE:
			return createIgnoreOpponentGoalKeeperWithBallRule();
		case RulesPackage.GOAL_KEEPER_PASSES_TO_PLAYER_RED:
			return createGoalKeeperPassesToPlayer_Red();
		case RulesPackage.PLAYER_TO_PLAYER_SHOT:
			return createPlayerToPlayerShot();
		default:
			throw new IllegalArgumentException("The class '" + eClass.getName()
					+ "' is not a valid classifier");
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CreateUpdateRule createCreateUpdateRule() {
		CreateUpdateRuleImpl createUpdateRule = new CreateUpdateRuleImpl();
		return createUpdateRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MoveForwardRule createMoveForwardRule() {
		MoveForwardRuleImpl moveForwardRule = new MoveForwardRuleImpl();
		return moveForwardRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CreateEastWestLinksRule createCreateEastWestLinksRule() {
		CreateEastWestLinksRuleImpl createEastWestLinksRule = new CreateEastWestLinksRuleImpl();
		return createEastWestLinksRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CreateNorthSouthLinksRule createCreateNorthSouthLinksRule() {
		CreateNorthSouthLinksRuleImpl createNorthSouthLinksRule = new CreateNorthSouthLinksRuleImpl();
		return createNorthSouthLinksRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RegularFields createRegularFields() {
		RegularFieldsImpl regularFields = new RegularFieldsImpl();
		return regularFields;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DoNotMoveGoalKeeper createDoNotMoveGoalKeeper() {
		DoNotMoveGoalKeeperImpl doNotMoveGoalKeeper = new DoNotMoveGoalKeeperImpl();
		return doNotMoveGoalKeeper;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CreateBallRule createCreateBallRule() {
		CreateBallRuleImpl createBallRule = new CreateBallRuleImpl();
		return createBallRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public LinkBallToPlayerRule createLinkBallToPlayerRule() {
		LinkBallToPlayerRuleImpl linkBallToPlayerRule = new LinkBallToPlayerRuleImpl();
		return linkBallToPlayerRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GoalFields createGoalFields() {
		GoalFieldsImpl goalFields = new GoalFieldsImpl();
		return goalFields;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IgnoreOpponentPlayersRule createIgnoreOpponentPlayersRule() {
		IgnoreOpponentPlayersRuleImpl ignoreOpponentPlayersRule = new IgnoreOpponentPlayersRuleImpl();
		return ignoreOpponentPlayersRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MoveGoalKeeperNorth createMoveGoalKeeperNorth() {
		MoveGoalKeeperNorthImpl moveGoalKeeperNorth = new MoveGoalKeeperNorthImpl();
		return moveGoalKeeperNorth;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IgnoreOpponentGoalKeeperRule createIgnoreOpponentGoalKeeperRule() {
		IgnoreOpponentGoalKeeperRuleImpl ignoreOpponentGoalKeeperRule = new IgnoreOpponentGoalKeeperRuleImpl();
		return ignoreOpponentGoalKeeperRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GoalKeeper_KickOffBall createGoalKeeper_KickOffBall() {
		GoalKeeper_KickOffBallImpl goalKeeper_KickOffBall = new GoalKeeper_KickOffBallImpl();
		return goalKeeper_KickOffBall;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MoveGoalKeeperSouth createMoveGoalKeeperSouth() {
		MoveGoalKeeperSouthImpl moveGoalKeeperSouth = new MoveGoalKeeperSouthImpl();
		return moveGoalKeeperSouth;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IgnoreOpponentGoalKeeperWithBallRule createIgnoreOpponentGoalKeeperWithBallRule() {
		IgnoreOpponentGoalKeeperWithBallRuleImpl ignoreOpponentGoalKeeperWithBallRule = new IgnoreOpponentGoalKeeperWithBallRuleImpl();
		return ignoreOpponentGoalKeeperWithBallRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GoalKeeperPassesToPlayer_Red createGoalKeeperPassesToPlayer_Red() {
		GoalKeeperPassesToPlayer_RedImpl goalKeeperPassesToPlayer_Red = new GoalKeeperPassesToPlayer_RedImpl();
		return goalKeeperPassesToPlayer_Red;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PlayerToPlayerShot createPlayerToPlayerShot() {
		PlayerToPlayerShotImpl playerToPlayerShot = new PlayerToPlayerShotImpl();
		return playerToPlayerShot;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RulesPackage getRulesPackage() {
		return (RulesPackage) getEPackage();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @deprecated
	 * @generated
	 */
	@Deprecated
	public static RulesPackage getPackage() {
		return RulesPackage.eINSTANCE;
	}

} //RulesFactoryImpl
